<button class="ml-4" id="mode-toggle" role="switch" type="button" tabindex="0" aria-checked="false">
  <span class="sr-only">Toggle appearance</span>
  <!-- Moon -->
  <svg id="mode-toggle-moon" class="hidden dark:block" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"
    ><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
      ><path d="M0 0h24v24H0z"></path><path fill="currentColor" d="M12 1.992a10 10 0 1 0 9.236 13.838c.341-.82-.476-1.644-1.298-1.31a6.5 6.5 0 0 1-6.864-10.787l.077-.08c.551-.63.113-1.653-.758-1.653h-.266l-.068-.006l-.06-.002z"></path></g
    ></svg
  >
  <!-- Sun -->
  <svg id="mode-toggle-sun" class="block dark:hidden" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"
    ><g fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
      ><path d="M0 0h24v24H0z"></path><path
        fill="currentColor"
        d="M12 19a1 1 0 0 1 .993.883L13 20v1a1 1 0 0 1-1.993.117L11 21v-1a1 1 0 0 1 1-1zm6.313-2.09l.094.083l.7.7a1 1 0 0 1-1.32 1.497l-.094-.083l-.7-.7a1 1 0 0 1 1.218-1.567l.102.07zm-11.306.083a1 1 0 0 1 .083 1.32l-.083.094l-.7.7a1 1 0 0 1-1.497-1.32l.083-.094l.7-.7a1 1 0 0 1 1.414 0zM4 11a1 1 0 0 1 .117 1.993L4 13H3a1 1 0 0 1-.117-1.993L3 11h1zm17 0a1 1 0 0 1 .117 1.993L21 13h-1a1 1 0 0 1-.117-1.993L20 11h1zM6.213 4.81l.094.083l.7.7a1 1 0 0 1-1.32 1.497l-.094-.083l-.7-.7A1 1 0 0 1 6.11 4.74l.102.07zm12.894.083a1 1 0 0 1 .083 1.32l-.083.094l-.7.7a1 1 0 0 1-1.497-1.32l.083-.094l.7-.7a1 1 0 0 1 1.414 0zM12 2a1 1 0 0 1 .993.883L13 3v1a1 1 0 0 1-1.993.117L11 4V3a1 1 0 0 1 1-1zm0 5a5 5 0 1 1-4.995 5.217L7 12l.005-.217A5 5 0 0 1 12 7z"
      ></path></g
    ></svg
  >
</button>

<script>
  import { listenForColorSchemeChange } from "~/functions";

  function setupTheme() {
    const storageTheme = localStorage.getItem("theme");
    const isSystemColorSchemeDark = window.matchMedia("(prefers-color-scheme: dark)").matches;

    listenForColorSchemeChange();

    if (storageTheme) {
      document.documentElement.classList.add(storageTheme);
      return;
    }

    if (isSystemColorSchemeDark) {
      document.documentElement.classList.add("dark");
      return;
    }
  }

  function setupListeners() {
    const button = document.querySelector("#mode-toggle") as HTMLButtonElement;
    button.addEventListener("click", toggleTheme);
  }

  function toggleTheme() {
    let mode = localStorage.getItem("theme");
    const sun = document.querySelector("#mode-toggle-sun") as SVGElement;
    const moon = document.querySelector("#mode-toggle-moon") as SVGElement;

    if (mode === "dark") {
      sun.classList.remove("hidden");
      moon.classList.add("hidden");
      localStorage.setItem("theme", "light");
      document.documentElement.classList.remove("dark");
    } else {
      sun.classList.add("hidden");
      moon.classList.remove("hidden");
      localStorage.setItem("theme", "dark");
      document.documentElement.classList.add("dark");
    }
  }

  setupTheme();
  setupListeners();
  document.addEventListener("astro:after-swap", setupTheme);
  document.addEventListener("astro:after-swap", setupListeners);
</script>
